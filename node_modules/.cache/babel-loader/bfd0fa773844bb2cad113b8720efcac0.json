{"ast":null,"code":"import _objectSpread from \"/Users/sachinpatel/Desktop/Sachin_App/generate_meme/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sachinpatel/Desktop/Sachin_App/generate_meme/src/Gallery.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport PropTypes from 'prop-types';\nimport ImageDisplay from './ImageDisplay';\nconst initialState = {\n  toptext: \"\",\n  bottomtext: \"\",\n  isTopDragging: false,\n  isBottomDragging: false,\n  topY: \"10%\",\n  topX: \"50%\",\n  bottomX: \"50%\",\n  bottomY: \"90%\"\n};\nexport default class Gallery extends Component {\n  constructor() {\n    super();\n    this.state = _objectSpread({\n      isLoaded: false,\n      imageIsOpen: false,\n      images: []\n    }, initialState);\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        images: json.data.memes\n      });\n    });\n  }\n\n  renderImage() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    //console.log(this.state.images)\n    const image_component = this.state.images.map(function (image) {\n      return React.createElement(ImageDisplay, {\n        key: image.id,\n        src: image.url,\n        alt: image.name,\n        width: image.width,\n        height: image.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"image_display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, image_component), \")\");\n  }\n\n}","map":{"version":3,"sources":["/Users/sachinpatel/Desktop/Sachin_App/generate_meme/src/Gallery.js"],"names":["React","Component","PropTypes","ImageDisplay","initialState","toptext","bottomtext","isTopDragging","isBottomDragging","topY","topX","bottomX","bottomY","Gallery","constructor","state","isLoaded","imageIsOpen","images","componentDidMount","fetch","then","res","json","setState","data","memes","renderImage","render","image_component","map","image","id","url","name","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAIA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,OAAO,EAAE,EADO;AAEhBC,EAAAA,UAAU,EAAE,EAFI;AAGhBC,EAAAA,aAAa,EAAE,KAHC;AAIhBC,EAAAA,gBAAgB,EAAE,KAJF;AAKhBC,EAAAA,IAAI,EAAE,KALU;AAMhBC,EAAAA,IAAI,EAAE,KANU;AAOhBC,EAAAA,OAAO,EAAE,KAPO;AAQhBC,EAAAA,OAAO,EAAE;AARO,CAApB;AAWA,eAAe,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAK3Ca,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL;AACIC,MAAAA,QAAQ,EAAE,KADd;AAEIC,MAAAA,WAAW,EAAE,KAFjB;AAGIC,MAAAA,MAAM,EAAG;AAHb,OAIOd,YAJP;AAMH;;AAEDe,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAC,IADC;AAEVE,QAAAA,MAAM,EAAEK,IAAI,CAACE,IAAL,CAAUC;AAFR,OAAd;AAIH,KAPD;AAQH;;AACDC,EAAAA,WAAW,GAAE;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAMC,eAAe,GAAG,KAAKd,KAAL,CAAWG,MAAX,CAAkBY,GAAlB,CAAsB,UAASC,KAAT,EAAe;AACzD,aAAO,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAzB;AAA6B,QAAA,GAAG,EAAED,KAAK,CAACE,GAAxC;AAA6C,QAAA,GAAG,EAAEF,KAAK,CAACG,IAAxD;AAA8D,QAAA,KAAK,EAAEH,KAAK,CAACI,KAA3E;AAAkF,QAAA,MAAM,EAAEJ,KAAK,CAACK,MAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAkH,KAD9F,CAAxB;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKP,eAFL,CAHA,MADJ;AAYH;;AAhD0C","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\nimport PropTypes from 'prop-types';\nimport ImageDisplay from './ImageDisplay'\n\n\n\nconst initialState ={\n    toptext: \"\",\n    bottomtext: \"\",\n    isTopDragging: false,\n    isBottomDragging: false,\n    topY: \"10%\",\n    topX: \"50%\",\n    bottomX: \"50%\",\n    bottomY: \"90%\"\n}; \n\nexport default class Gallery extends Component {\n   \n    \n   \n    \n    constructor(){\n        super();\n        this.state={\n            isLoaded: false,\n            imageIsOpen :false,\n            images : [],\n            ...initialState\n        }\n    }\n\n    componentDidMount(){\n        \n        fetch('https://api.imgflip.com/get_memes')\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                isLoaded:true,\n                images: json.data.memes\n            })\n        })\n    }\n    renderImage(){\n        return(<div>\n            {/* <img src={this.images.url} /> */}\n        </div>\n        );\n    }\n    render() {\n        //console.log(this.state.images)\n        const image_component = this.state.images.map(function(image){\n            return <ImageDisplay key={image.id} src={image.url} alt={image.name} width={image.width} height={image.height} />})\n        return (\n            <div className=\"image_display\">\n               \n\n            <div className=\"image-holder\">\n                {/* <span className=\"meme-top-caption\">Top text</span> */}\n                {image_component}\n                {/* <span className=\"meme-bottom-caption\">Bottom Text</span> */}\n            </div>    \n        ) \n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}