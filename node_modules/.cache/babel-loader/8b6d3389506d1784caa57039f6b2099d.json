{"ast":null,"code":"import _objectSpread from \"/Users/sachinpatel/Desktop/Sachin_App/generate_meme/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sachinpatel/Desktop/Sachin_App/generate_meme/src/Gallery.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport PropTypes from 'prop-types';\nimport ImageDisplay from './ImageDisplay';\nconst initialState = {\n  toptext: \"\",\n  bottomtext: \"\",\n  isTopDragging: false,\n  isBottomDragging: false,\n  topY: \"10%\",\n  topX: \"50%\",\n  bottomX: \"50%\",\n  bottomY: \"90%\"\n};\nexport default class Gallery extends Component {\n  constructor() {\n    super();\n    this.state = _objectSpread({\n      isLoaded: false,\n      topText: \"\",\n      bottomText: \"\",\n      imageIsOpen: false,\n      images: []\n    }, initialState);\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        images: json.data.memes\n      });\n    });\n  }\n\n  renderImage() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    //console.log(this.state.images)\n    const image_component = this.state.images.map(function (image) {\n      return React.createElement(ImageDisplay, {\n        key: image.id,\n        id: image.id,\n        alt: image.name,\n        src: image.url,\n        width: image.width,\n        height: image.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"image_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"meme-top-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Top Text\"), React.createElement(\"img\", {\n      className: \"img_tag\",\n      src: this.props.src,\n      alt: this.props.name,\n      key: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"meme-bottom-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Bottom Text\")) // <div className=\"image-holder\">\n    //     {/* <span className=\"meme-top-caption\">Top text</span> */}\n    //     {image_component}\n    //     {/* <span className=\"meme-bottom-caption\">Bottom Text</span> */}\n    // </div>    \n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/sachinpatel/Desktop/Sachin_App/generate_meme/src/Gallery.js"],"names":["React","Component","PropTypes","ImageDisplay","initialState","toptext","bottomtext","isTopDragging","isBottomDragging","topY","topX","bottomX","bottomY","Gallery","constructor","state","isLoaded","topText","bottomText","imageIsOpen","images","componentDidMount","fetch","then","res","json","setState","data","memes","renderImage","render","image_component","map","image","id","name","url","width","height","props","src"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAIA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,OAAO,EAAE,EADO;AAEhBC,EAAAA,UAAU,EAAE,EAFI;AAGhBC,EAAAA,aAAa,EAAE,KAHC;AAIhBC,EAAAA,gBAAgB,EAAE,KAJF;AAKhBC,EAAAA,IAAI,EAAE,KALU;AAMhBC,EAAAA,IAAI,EAAE,KANU;AAOhBC,EAAAA,OAAO,EAAE,KAPO;AAQhBC,EAAAA,OAAO,EAAE;AARO,CAApB;AAWA,eAAe,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAK3Ca,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL;AACIC,MAAAA,QAAQ,EAAE,KADd;AAEIC,MAAAA,OAAO,EAAC,EAFZ;AAGIC,MAAAA,UAAU,EAAC,EAHf;AAIIC,MAAAA,WAAW,EAAE,KAJjB;AAKIC,MAAAA,MAAM,EAAG;AALb,OAMOhB,YANP;AAQH;;AAEDiB,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAC,IADC;AAEVI,QAAAA,MAAM,EAAEK,IAAI,CAACE,IAAL,CAAUC;AAFR,OAAd;AAIH,KAPD;AAQH;;AACDC,EAAAA,WAAW,GAAE;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAMC,eAAe,GAAG,KAAKhB,KAAL,CAAWK,MAAX,CAAkBY,GAAlB,CAAsB,UAASC,KAAT,EAAe;AACzD,aAAO,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAzB;AAA6B,QAAA,EAAE,EAAED,KAAK,CAACC,EAAvC;AAA2C,QAAA,GAAG,EAAED,KAAK,CAACE,IAAtD;AAA4D,QAAA,GAAG,EAAEF,KAAK,CAACG,GAAvE;AAA4E,QAAA,KAAK,EAAEH,KAAK,CAACI,KAAzF;AAAgG,QAAA,MAAM,EAAEJ,KAAK,CAACK,MAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAA+H,KAD3G,CAAxB;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,GAAzC;AAA8C,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWJ,IAA9D;AAAoE,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWL,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ,CAQI;AACA;AACA;AACA;AACA;AAZJ;AAgBH;;AAtD0C","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\nimport PropTypes from 'prop-types';\nimport ImageDisplay from './ImageDisplay'\n\n\n\nconst initialState ={\n    toptext: \"\",\n    bottomtext: \"\",\n    isTopDragging: false,\n    isBottomDragging: false,\n    topY: \"10%\",\n    topX: \"50%\",\n    bottomX: \"50%\",\n    bottomY: \"90%\"\n}; \n\nexport default class Gallery extends Component {\n   \n    \n   \n    \n    constructor(){\n        super();\n        this.state={\n            isLoaded: false,\n            topText:\"\",\n            bottomText:\"\",\n            imageIsOpen :false,\n            images : [],\n            ...initialState\n        }\n    }\n\n    componentDidMount(){\n        \n        fetch('https://api.imgflip.com/get_memes')\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                isLoaded:true,\n                images: json.data.memes\n            })\n        })\n    }\n    renderImage(){\n        return(<div>\n            {/* <img src={this.images.url} /> */}\n        </div>\n        );\n    }\n    render() {\n        //console.log(this.state.images)\n        const image_component = this.state.images.map(function(image){\n            return <ImageDisplay key={image.id} id={image.id} alt={image.name} src={image.url} width={image.width} height={image.height}/>})\n        return (\n            <div className=\"image_div\">\n                <span className=\"meme-top-caption\">Top Text</span>\n                <img className=\"img_tag\" src={this.props.src} alt={this.props.name} key={this.props.id} />\n                <span className=\"meme-bottom-caption\">Bottom Text</span>\n            </div>\n\n\n            // <div className=\"image-holder\">\n            //     {/* <span className=\"meme-top-caption\">Top text</span> */}\n            //     {image_component}\n            //     {/* <span className=\"meme-bottom-caption\">Bottom Text</span> */}\n            // </div>    \n        ) \n            \n        \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}