{"ast":null,"code":"import _objectSpread from \"/Users/sachinpatel/Desktop/Sachin_App/generate_meme/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sachinpatel/Desktop/Sachin_App/generate_meme/src/Gallery.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport PropTypes from 'prop-types';\nconst initialState = {\n  toptext: \"\",\n  bottomtext: \"\",\n  isTopDragging: false,\n  isBottomDragging: false,\n  topY: \"10%\",\n  topX: \"50%\",\n  bottomX: \"50%\",\n  bottomY: \"90%\"\n};\nexport default class Gallery extends Component {\n  constructor() {\n    super();\n    this.state = _objectSpread({\n      isLoaded: false,\n      imageIsOpen: false,\n      images: [],\n      index: \"\"\n    }, initialState);\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        images: json.data.memes\n      });\n    });\n  }\n\n  renderImage() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    console.log(this.state.images[0]);\n    const image = this.state.images[index];\n    return React.createElement(\"div\", {\n      className: \"image_display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"this.state.images.map((item, id) =>\", React.createElement(\"div\", {\n      className: \"image-holder\",\n      key: item.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"meme-top-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Top text\"), React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        cursor: \"pointer\",\n        height: \"100%\"\n      },\n      alt: index,\n      src: index.url,\n      onClick: () => this.openImage(index),\n      role: \"presentation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), \")\");\n  }\n\n}","map":{"version":3,"sources":["/Users/sachinpatel/Desktop/Sachin_App/generate_meme/src/Gallery.js"],"names":["React","Component","PropTypes","initialState","toptext","bottomtext","isTopDragging","isBottomDragging","topY","topX","bottomX","bottomY","Gallery","constructor","state","isLoaded","imageIsOpen","images","index","componentDidMount","fetch","then","res","json","setState","data","memes","renderImage","render","console","log","image","item","url","width","cursor","height","openImage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAIA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,OAAO,EAAE,EADO;AAEhBC,EAAAA,UAAU,EAAE,EAFI;AAGhBC,EAAAA,aAAa,EAAE,KAHC;AAIhBC,EAAAA,gBAAgB,EAAE,KAJF;AAKhBC,EAAAA,IAAI,EAAE,KALU;AAMhBC,EAAAA,IAAI,EAAE,KANU;AAOhBC,EAAAA,OAAO,EAAE,KAPO;AAQhBC,EAAAA,OAAO,EAAE;AARO,CAApB;AAWA,eAAe,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAK3CY,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL;AACIC,MAAAA,QAAQ,EAAE,KADd;AAEIC,MAAAA,WAAW,EAAE,KAFjB;AAGIC,MAAAA,MAAM,EAAG,EAHb;AAIIC,MAAAA,KAAK,EAAE;AAJX,OAKOf,YALP;AAOH;;AAEDgB,EAAAA,iBAAiB,GAAE;AAEfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVT,QAAAA,QAAQ,EAAC,IADC;AAEVE,QAAAA,MAAM,EAAEM,IAAI,CAACE,IAAL,CAAUC;AAFR,OAAd;AAIH,KAPD;AAQH;;AACDC,EAAAA,WAAW,GAAE;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWG,MAAX,CAAkB,CAAlB,CAAZ;AACA,UAAMc,KAAK,GAAG,KAAKjB,KAAL,CAAWG,MAAX,CAAkBC,KAAlB,CAAd;AACA,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEA;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEc,IAAI,CAACC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACA,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,MADJ;AAEHC,QAAAA,MAAM,EAAE,SAFL;AAGHC,QAAAA,MAAM,EAAE;AAHL,OADP;AAMA,MAAA,GAAG,EAAElB,KANL;AAOA,MAAA,GAAG,EAAEA,KAAK,CAACe,GAPX;AAQA,MAAA,OAAO,EAAE,MAAM,KAAKI,SAAL,CAAenB,KAAf,CARf;AASA,MAAA,IAAI,EAAC,cATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFA,MADJ;AAoBH;;AAxD0C","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\nimport PropTypes from 'prop-types';\n\n\n\nconst initialState ={\n    toptext: \"\",\n    bottomtext: \"\",\n    isTopDragging: false,\n    isBottomDragging: false,\n    topY: \"10%\",\n    topX: \"50%\",\n    bottomX: \"50%\",\n    bottomY: \"90%\"\n}; \n\nexport default class Gallery extends Component {\n   \n    \n   \n    \n    constructor(){\n        super();\n        this.state={\n            isLoaded: false,\n            imageIsOpen :false,\n            images : [],\n            index: \"\",\n            ...initialState\n        }\n    }\n\n    componentDidMount(){\n        \n        fetch('https://api.imgflip.com/get_memes')\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                isLoaded:true,\n                images: json.data.memes\n            })\n        })\n    }\n    renderImage(){\n        return(<div>\n            {/* <img src={this.images.url} /> */}\n        </div>\n        );\n    }\n    render() {\n        console.log(this.state.images[0])\n        const image = this.state.images[index];\n        return (\n            <div className=\"image_display\">\n               this.state.images.map((item, id) => \n            <div className=\"image-holder\" key={item.url}>\n                <span className=\"meme-top-caption\">Top text</span>\n                <img \n                style={{\n                    width: \"100%\",\n                    cursor: \"pointer\",\n                    height: \"100%\"\n                }}\n                alt={index}\n                src={index.url}\n                onClick={() => this.openImage(index)}\n                role=\"presentation\"\n                />\n            </div>    \n        ) \n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}